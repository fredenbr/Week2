{"version":3,"sources":["logo.svg","components/EmployeeForm.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","EmployeeForm","Component","constructor","props","super","this","state","name","email","title","department","handleChange","bind","handleSubmit","event","value","target","setState","preventDefault","console","log","render","React","createElement","onSubmit","type","onChange","App","className","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"qLAAAA,EAAOC,QAAU,IAA0B,kC,kHCG3C,MAAMC,UAAqBC,YACzBC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,MAAQ,CAAEC,KAAM,GAAIC,MAAO,GAAIC,MAAO,GAAIC,WAAY,IAE3DL,KAAKM,aAAeN,KAAKM,aAAaC,KAAKP,MAC3CA,KAAKQ,aAAeR,KAAKQ,aAAaD,KAAKP,MAG7CM,aAAaG,GACX,MAAM,KAAEP,EAAI,MAAEQ,GAAUD,EAAME,OAC9BX,KAAKY,SAAS,CAAE,CAACV,GAAOQ,IAG1BF,aAAaC,GACXA,EAAMI,iBACNC,QAAQC,IAAIf,KAAKC,OACjBD,KAAKY,SAAS,CAAEV,KAAM,GAAIC,MAAO,GAAIC,MAAO,GAAIC,WAAY,KAG9DW,SACE,OACEC,IAAAC,cAAA,QAAMC,SAAUnB,KAAKQ,cACnBS,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,SACPD,IAAAC,cAAA,SAAOE,KAAK,OAAOlB,KAAK,OAAOQ,MAAOV,KAAKC,MAAMC,KAAMmB,SAAUrB,KAAKM,gBAExEW,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,UACPD,IAAAC,cAAA,SAAOE,KAAK,QAAQlB,KAAK,QAAQQ,MAAOV,KAAKC,MAAME,MAAOkB,SAAUrB,KAAKM,gBAE3EW,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,cACPD,IAAAC,cAAA,SAAOE,KAAK,OAAOlB,KAAK,QAAQQ,MAAOV,KAAKC,MAAMG,MAAOiB,SAAUrB,KAAKM,gBAE1EW,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,eACPD,IAAAC,cAAA,SAAOE,KAAK,OAAOlB,KAAK,aAAaQ,MAAOV,KAAKC,MAAMI,WAAYgB,SAAUrB,KAAKM,gBAEpFW,IAAAC,cAAA,UAAQE,KAAK,UAAS,YAMfzB,QChCA2B,MAXf,WACE,OACEL,IAAAC,cAAA,OAAKK,UAAU,OACbN,IAAAC,cAAA,UAAQK,UAAU,cAChBN,IAAAC,cAAA,UAAI,wBACJD,IAAAC,cAACvB,EAAY,MAAG,OCET6B,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDrB,OACHC,IAAAC,cAACD,IAAMqB,WAAU,KACfrB,IAAAC,cAACI,EAAG,QAORE,M","file":"static/js/main.ad6836c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import './EmployeeForm.css';\nimport React, { Component } from 'react';\n\nclass EmployeeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { name: '', email: '', title: '', department: '' };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(this.state);\n    this.setState({ name: '', email: '', title: '', department: '' });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div>\n          <label>Name:</label>\n          <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\n        </div>\n        <div>\n          <label>Email:</label>\n          <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n        </div>\n        <div>\n          <label>Job Title:</label>\n          <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleChange} />\n        </div>\n        <div>\n          <label>Department:</label>\n          <input type=\"text\" name=\"department\" value={this.state.department} onChange={this.handleChange} />\n        </div>\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n}\n\nexport default EmployeeForm;\n","import React from 'react';\nimport './App.css';\nimport logo from './logo.svg';\nimport EmployeeForm from './components/EmployeeForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Employee Information</h1> \n        <EmployeeForm /> {/* This is where the EmployeeForm will be rendered */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}